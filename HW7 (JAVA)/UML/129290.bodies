class PolygonVect
!!!136842.java!!!	PolygonVect(inout r : Rectangle)
	
		point2d p = new point2d();
		p.x = (r.getX());
		p.y = (r.getY());
		v.add(p);
		
		p.x = (r.getX());
		p.y = (r.getY()+r.getHeight());
		v.add(p);
	
		p.x = (r.getX()+r.getWidth());
		p.y = (r.getY()+r.getHeight());
		v.add(p);
				
		p.x = (r.getX()+r.getWidth());
		p.y = (r.getY());
		v.add(p);
				
		Area = (r.getWidth())*(r.getHeight());	
		Perimeter = 2*(r.getHeight()+r.getWidth());

!!!136970.java!!!	PolygonVect(inout t : Triangle)
		point2d p = new point2d();		
		
		p.x = (t.getX1());
		p.y = (t.getY1());
		v.add(p);
		
		p.x = (t.getX2());
		p.y = (t.getY2());
		v.add(p);

		p.x = (t.getX3());
		p.y = (t.getY3());
		v.add(p);

		Area = (t.getSide())*(t.getSide())*(Math.pow(3,0.5))/4;	
		Perimeter = 3*(t.getSide());	
!!!137098.java!!!	PolygonVect(inout c : Circle)
		int i;
		int r = c.getRadius();/*Circle convertion constructor. Converts it a polygon.*/
		double a;

		a=2*Math.PI/99;

		for(i=0 ; i<99 ; i++)
		{	  
			point2d p = new point2d();		
			p.x = (r*Math.cos(a)+c.getX()+r);
			p.y = (r*Math.sin(a)+c.getY()+r);
			
			v.add(p);
			a+=(2*Math.PI/99);
		}

		Area = Math.PI*(c.getRadius())*(c.getRadius());
		Perimeter = 2*Math.PI*(c.getRadius());		

!!!137226.java!!!	area() : double
 return Area;
!!!137354.java!!!	perimeter() : double
 return Perimeter;
!!!137482.java!!!	increment() : void
	
		int i;
		for(i=0 ; i<v.size() ; i++)
		{
			point2d p = new point2d();
			p = v.get(i);
			p.x = (p.getX()+1);
			p.y = (p.getY()+1);
		
			v.set(i,p);
		}

!!!137610.java!!!	decrement() : void
		int i;
		for(i=0 ; i<v.size() ; i++)
		{
			point2d p = new point2d();
			p = v.get(i);
			p.x = (p.getX()-1);
			p.y = (p.getY()-1);
		
			v.set(i,p);
		}
!!!137738.java!!!	draw(inout g : Graphics) : void

		int[] xPoints = new int[v.size()];
		int[] yPoints = new int[v.size()];

		int i;
		for(i=0 ; i<v.size() ; i++)
		{
			xPoints[i] = (int)(v.get(i).x);
			yPoints[i] = (int)(v.get(i).y);			
		}
		
		g.fillPolygon(xPoints, yPoints, v.size()); 
!!!137866.java!!!	compareTo(inout obj : Shape) : int
 
		if(obj.area()>area())
			return 1;
		else if(obj.area()<area())
			return -1;
		else
			return 0;
